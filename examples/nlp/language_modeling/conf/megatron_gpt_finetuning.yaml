steps: 2000
name: rte_finetune_gpt_1.3b_steps${steps}_lr1e-5

trainer:
  devices: 1
  accelerator: gpu
  num_nodes: 1
  precision: 16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  replace_sampler_ddp: False
  max_epochs: null
  max_steps: ${steps} # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  log_every_n_steps: 10
  val_check_interval: 1.0
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.
  benchmark: False


exp_manager:
  explicit_log_dir: null
  exp_dir: null
  name: ${name}
  create_wandb_logger: True
  wandb_logger_kwargs:
    project: "RTEPromptLearning"
    name: ${name}
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: val_loss
    save_top_k: 2
    mode: min
    save_nemo_on_train_end: True 
    filename: 'megatron_gpt_prompt_tune--{val_loss:.3f}-{step}'
    model_parallel_size: ${model.tensor_model_parallel_size}
    save_best_model: True

model:
  seed: 1234
  global_batch_size: 8
  micro_batch_size: 4
  tensor_model_parallel_size: 1 
  pipeline_model_parallel_size: 1 

  restore_path: /prompt-learning/NeMo/examples/nlp/language_modeling/models/gpt_1.3b.nemo # Path to an existing p-tuned/prompt tuned .nemo model you wish to add new tasks to or run inference with

  task_templates:
  - taskname: "rte" 
    prompt_template: "sentence1: {premise} sentence2: {hypothesis} answer: {answer}" 
    total_virtual_tokens: 9 
    virtual_token_splits: [9] 
    truncate_field: null
    answer_only_loss: True
    answer_field: "answer"

  data:
    train_ds: [data/rte_train.jsonl,]
    validation_ds: [data/rte_val.jsonl,]
    add_eos: True
    shuffle: True
    num_workers: 8
    pin_memory: True


  optim:
    name: fused_adam
    lr: 1e-5
    weight_decay: 0.01 
    betas: 
    - 0.9
    - 0.98
    sched:
      name: CosineAnnealing
      warmup_steps: 50
      constant_steps: 0 # Constant steps should also be 0 when min_lr=0
      min_lr: 0.0 # min_lr must be 0.0 for prompt learning
      monitor: val_loss
      reduce_on_plateau: false