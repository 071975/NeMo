name: G2PCTC

# Dataset info
train_dataset: ???
validation_dataset: ???
do_testing: False
pretrained_model: null # .nemo

model:
  model_name: byt5
  max_source_len: 512
  max_target_len: 512

  encoder:
    transformer: google/byt5-small
    dropout: null

  tokenizer_grapheme:
    pretrained: ${model.encoder.transformer}
    unk_token: "Ò‚" # in the data, T5 unk_token is still <unk>
    vocab_file: null # will be filled during training
    do_lower: true # whether to lower case graphemes

  decoder:
    _target_: nemo.collections.asr.modules.ConvASRDecoder
    feat_in: null # will be filled during training based on encoder model dim
    num_classes: -1
    vocabulary: null # will be filled during training

  tokenizer:
    dir: null  # path to directory which contains either tokenizer.model (bpe) or vocab.txt (wpe)
    type: bpe  # Can be either bpe (SentencePiece tokenizer) or wpe (WordPiece tokenizer)

  train_ds:
    dataset:
      _target_: "nemo.collections.tts.torch.data.T5G2PDataset"
    manifest_filepath: ${train_dataset}
    dataloader_params:
      drop_last: false
      shuffle: true
      batch_size: 16 #32
      num_workers: 4

  validation_ds:
    dataset:
      #_target_: "nemo.collections.tts.data.datalayers.T5G2PDataset"
    manifest_filepath: ${validation_dataset}
    dataloader_params:
      drop_last: false
      shuffle: false
      batch_size: 16 #64
      num_workers: 4

  test_ds:
    dataset:
      #_target_: "nemo.collections.tts.data.datalayers.T5G2PDataset"
    manifest_filepath: null
    dataloader_params:
      drop_last: false
      shuffle: false
      batch_size: 32 #64
      num_workers: 4

  optim:
    name: adamw
    lr: 2e-4
    weight_decay: 0.01
    # scheduler setup
    sched:
      name: WarmupAnnealing
      # pytorch lightning args
      reduce_on_plateau: false
      # scheduler config override
      warmup_steps: null
      warmup_ratio: 0.1
      last_epoch: -1

trainer:
  devices: 1 # number of gpus
  max_epochs: 5
  num_nodes: 1
  accelerator: gpu
  strategy: ddp
  accumulate_grad_batches: 1
  enable_checkpointing: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  log_every_n_steps: 200
  check_val_every_n_epoch: 1

exp_manager:
  exp_dir: null
  name: ${name}
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    save_top_k: 3
    monitor: "val_loss"
    mode: "min"
    save_best_model: true
